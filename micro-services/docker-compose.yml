version: '3'

networks:
  py-event-sys:
    external:
      name: infra_py-event-sys

volumes:
  event-ping_data:
    driver: local
  event-pong_data:
    driver: local
  pabs-msg-from-file_data:
    driver: local

services:
  # event-logging-controller:
  #   build:
  #     context: ./event-logging-controller
  #     dockerfile: Dockerfile
  #   container_name: event-logging-controller
  #   image: event-logging-controller:latest
  #   ports:
  #     - "8080"
  #   restart: "no"
  #   networks:
  #     - py-event-sys
  #   volumes:
  #     - './event-logging-controller:/data'
  #   environment:
  #     - BROKER_URL
  #     - DEBUG_LEVEL
  #     - KAFKA_DEBUG_LEVEL
  #     - API_CONTROLLER_PORT
  #     - TOPIC_PREFIX
  #     - CAMUNDA_ENGINE_URL

  pabs-msg-from-file:
    build:
      context: ./pabs-msg-from-file
      dockerfile: Dockerfile
    container_name: pabs-msg-from-file
    image: pabs-msg-from-file:latest
    ports:
      - "8080"
    restart: unless-stopped
    networks:
      - py-event-sys
    volumes:
      - ./pabs-msg-from-file/data:/data
    environment:
      - BROKER_URL
      - DEBUG_LEVEL
      - KAFKA_DEBUG_LEVEL
      - API_CONTROLLER_PORT
      - TOPIC_PREFIX
      - CAMUNDA_ENGINE_URL

  camunda-test:
    build:
      context: ./camunda-test
      dockerfile: Dockerfile
    container_name: camunda-test
    image: camunda-test:latest
    ports:
      - "8080"
    restart: unless-stopped
    networks:
      - py-event-sys
    volumes:
      - ./camunda-test/data:/data
    environment:
      - BROKER_URL
      - DEBUG_LEVEL
      - KAFKA_DEBUG_LEVEL
      - API_CONTROLLER_PORT
      - TOPIC_PREFIX
      - CAMUNDA_ENGINE_URL

  # pabs-msg-from-telegram:
  #   build:
  #     context: ./pabs-msg-from-telegram
  #     dockerfile: Dockerfile
  #   container_name: pabs-msg-from-telegram
  #   image: pabs-msg-from-telegram:latest
  #   ports:
  #     - "8080"
  #   restart: unless-stopped
  #   networks:
  #     - py-event-sys
  #   volumes:
  #     - ./pabs-msg-from-telegram/data:/data
  #   environment:
  #     - BROKER_URL
  #     - DEBUG_LEVEL
  #     - KAFKA_DEBUG_LEVEL
  #     - API_CONTROLLER_PORT
  #     - TOPIC_PREFIX
  #     - CAMUNDA_ENGINE_URL
  #     - TELEGRAM_API_ID
  #     - TELEGRAM_API_HASH
  #     - TELEGRAM_PABS_SESSION

  telegram-controller:
    build:
      context: ./telegram-controller
      dockerfile: Dockerfile
    container_name: telegram-controller
    image: telegram-controller:latest
    ports:
      - "8080"
    restart: unless-stopped
    networks:
      - py-event-sys
    volumes:
      - ./telegram-controller/data:/data
    environment:
      - BROKER_URL
      - DEBUG_LEVEL
      - KAFKA_DEBUG_LEVEL
      - API_CONTROLLER_PORT
      - TOPIC_PREFIX
      - CAMUNDA_ENGINE_URL
      - TELEGRAM_API_ID
      - TELEGRAM_API_HASH
      - TELEGRAM_GEN1_SESSION

  pabs-msg-to-signal:
    build:
      context: ./pabs-msg-to-signal
      dockerfile: Dockerfile
    container_name: pabs-msg-to-signal
    image: pabs-msg-to-signal:latest
    ports:
      - "8080"
    restart: unless-stopped
    networks:
      - py-event-sys
    volumes:
      - ./pabs-msg-to-signal/data:/data
    environment:
      - BROKER_URL
      - DEBUG_LEVEL
      - KAFKA_DEBUG_LEVEL
      - API_CONTROLLER_PORT
      - TOPIC_PREFIX
      - CAMUNDA_ENGINE_URL

  pabs-signal-controller:
    build:
      context: ./pabs-signal-controller
      dockerfile: Dockerfile
    container_name: pabs-signal-controller
    image: pabs-signal-controller:latest
    ports:
      - "8080"
    restart: unless-stopped
    networks:
      - py-event-sys
    volumes:
      - ./pabs-signal-controller/data:/data
    environment:
      - BROKER_URL
      - DEBUG_LEVEL
      - KAFKA_DEBUG_LEVEL
      - API_CONTROLLER_PORT
      - TOPIC_PREFIX
      - CAMUNDA_ENGINE_URL

  pabs-signal-entry-worker:
    build:
      context: ./pabs-signal-entry-worker
      dockerfile: Dockerfile
    container_name: pabs-signal-entry-worker
    image: pabs-signal-entry-worker:latest
    ports:
      - "8080"
    restart: unless-stopped
    networks:
      - py-event-sys
    volumes:
      - ./pabs-signal-entry-worker/data:/data
    environment:
      - BROKER_URL
      - DEBUG_LEVEL
      - KAFKA_DEBUG_LEVEL
      - API_CONTROLLER_PORT
      - TOPIC_PREFIX
      - CAMUNDA_ENGINE_URL

  pabs-signal-update-worker:
    build:
      context: ./pabs-signal-update-worker
      dockerfile: Dockerfile
    container_name: pabs-signal-update-worker
    image: pabs-signal-update-worker:latest
    ports:
      - "8080"
    restart: unless-stopped
    networks:
      - py-event-sys
    volumes:
      - ./pabs-signal-update-worker/data:/data
    environment:
      - BROKER_URL
      - DEBUG_LEVEL
      - KAFKA_DEBUG_LEVEL
      - API_CONTROLLER_PORT
      - TOPIC_PREFIX
      - CAMUNDA_ENGINE_URL

  binance-rest-controller:
    build:
      context: ./binance-rest-controller
      dockerfile: Dockerfile
    container_name: binance-rest-controller
    image: binance-rest-controller:latest
    ports:
      - "8080"
    restart: unless-stopped
    networks:
      - py-event-sys
    volumes:
      - ./binance-rest-controller/data:/data
    environment:
      - BROKER_URL
      - DEBUG_LEVEL
      - KAFKA_DEBUG_LEVEL
      - API_CONTROLLER_PORT
      - TOPIC_PREFIX
      - CAMUNDA_ENGINE_URL
      - BINANCE_S_APIKEY
      - BINANCE_S_SECRET
      - BINANCE_L_APIKEY
      - BINANCE_L_SECRET

  binance-ws-controller:
    build:
      context: ./binance-ws-controller
      dockerfile: Dockerfile
    container_name: binance-ws-controller
    image: binance-ws-controller:latest
    ports:
      - "8080"
    restart: unless-stopped
    networks:
      - py-event-sys
    volumes:
      - ./binance-ws-controller/data:/data
    environment:
      - BROKER_URL
      - DEBUG_LEVEL
      - KAFKA_DEBUG_LEVEL
      - API_CONTROLLER_PORT
      - TOPIC_PREFIX
      - CAMUNDA_ENGINE_URL
      - BINANCE_S_APIKEY
      - BINANCE_S_SECRET
      - BINANCE_L_APIKEY
      - BINANCE_L_SECRET

  pabs-msg-to-update:
    build:
      context: ./pabs-msg-to-update
      dockerfile: Dockerfile
    container_name: pabs-msg-to-update
    image: pabs-msg-to-update:latest
    ports:
      - "8080"
    restart: unless-stopped
    networks:
      - py-event-sys
    volumes:
      - ./pabs-msg-to-update/data:/data
    environment:
      - BROKER_URL
      - DEBUG_LEVEL
      - KAFKA_DEBUG_LEVEL
      - API_CONTROLLER_PORT
      - TOPIC_PREFIX
      - CAMUNDA_ENGINE_URL

  # pabs-msg-to-other:
  #   build:
  #     context: ./pabs-msg-to-other
  #     dockerfile: Dockerfile
  #   container_name: pabs-msg-to-other
  #   image: pabs-msg-to-other:latest
  #   ports:
  #     - "8080"
  #   restart: unless-stopped
  #   networks:
  #     - py-event-sys
  #   volumes:
  #     - ./pabs-msg-to-other/data:/data
  #   environment:
  #     - BROKER_URL
  #     - DEBUG_LEVEL
  #     - KAFKA_DEBUG_LEVEL
  #     - API_CONTROLLER_PORT
  #     - TOPIC_PREFIX
  #     - CAMUNDA_ENGINE_URL

  # event-ping:
  #   build:
  #     context: ./event-ping
  #     dockerfile: Dockerfile
  #   container_name: event-ping
  #   image: event-ping:latest
  #   ports:
  #     - "8080"
  #   restart: "no"
  #   networks:
  #     - py-event-sys
  #   volumes:
  #     - 'event-ping_data:/data'
  #   environment:
  #     - BROKER_URL
  #     - DEBUG_LEVEL
  #     - KAFKA_DEBUG_LEVEL
  #     - API_CONTROLLER_PORT

  # event-pong:
  #   build:
  #     context: ./event-pong
  #     dockerfile: Dockerfile
  #   container_name: event-pong
  #   image: event-pong:latest
  #   ports:
  #     - "8080"
  #   restart: "no"
  #   networks:
  #     - py-event-sys
  #   volumes:
  #     - 'event-pong_data:/data'
  #   environment:
  #     - BROKER_URL
  #     - DEBUG_LEVEL
  #     - KAFKA_DEBUG_LEVEL
  #     - API_CONTROLLER_PORT